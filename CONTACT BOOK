import json

class Contact:
    def __init__(self, save_name, mobile_number, mail, address):
        self.save_name = save_name
        self.mobile_number = mobile_number
        self.mail = mail
        self.address = address

    def to_dict(self):
        return {
            'save_name': self.save_name,
            'mobile_number': self.mobile_number,
            'mail': self.mail,
            'address': self.address
        }

    @classmethod
    def from_dict(cls, data):
        return cls(data['save_name'], data['mobile_number'], data['mail'], data['address'])

class ContactManager:
    def __init__(self):
        self.contacts = []

    def add_contact(self, save_name, mobile_number, mail, address):
        contact = Contact(save_name, mobile_number, mail, address)
        self.contacts.append(contact)

    def view_contacts(self):
        if not self.contacts:
            print("Annadurai - 8769465301 \nArunkumar - 8765342098 \nBanumathi - 9790766453 \nCharulatha - 8759876540 \nChinnamal - 9875087645 \nKrishnan - 9875097875 \nVijay - 985764878")
        return
        for index, contact in enumerate(self.contacts):
            print(f"{index + 1}. {contact.save_name} - {contact.mobile_number}")

    def search_contact(self, query):
        found_contacts = [contact for contact in self.contacts if query.lower() in contact.save_name.lower() or query in contact.mobile_number]
        if not found_contacts:
            print("No Contacts Matching....")
            return
        for index, contact in enumerate(found_contacts):
            print(f"{index + 1}. {contact.save_name} - {contact.mobile_number}")

    def update_contact(self, index, save_name=None, mobile_number=None, mail=None, address=None):
        if 0 <= index < len(self.contacts):
            contact = self.contacts[index]
            if save_name:
                contact.save_name = save_name
            if mobile_number:
                contact.mobile_number = mobile_number
            if mail:
                contact.mail = mail
            if address:
                contact.address = address
        else:
            print("Invalid contact index....")

    def delete_contact(self, index):
        if 0 <= index < len(self.contacts):
            del self.contacts[index]
        else:
            print(" ")

    def save_to_file(self, filename):
        with open(filename, 'w') as file:
            json.dump([contact.to_dict() for contact in self.contacts], file)

    def load_from_file(self, filename):
        try:
            with open(filename, 'r') as file:
                data = json.load(file)
                self.contacts = [Contact.from_dict(item) for item in data]
        except FileNotFoundError:
            print("CONTACT LIST....")
            print("Annadurai - 8769465301 \nArunkumar - 8765342098 \nBanumathi - 9790766453 \nCharulatha - 8759876540 \nChinnamal - 9875087645 \nKrishnan - 9875097875 \nVijay - 985764878")

            

def main():
    manager = ContactManager()
    manager.load_from_file('contacts.json')

    while True:
        print("\nContact Manager")
        print("1. Add Contact")
        print("2. View Contacts")
        print("3. Search Contacts")
        print("4. Update Contact")
        print("5. Delete Contact")
       

        choice = input("Enter your choice: ")

        if choice == '1':
            save_name = input("Enter name: ")
            mobile_number = input("Enter moblie number: ")
            mail = input("Enter email: ")
            address = input("Enter address: ")
            manager.add_contact(save_name, mobile_number, mail, address)
            print("Contact added successully....")

        elif choice == '2':
            manager.view_contacts()

        elif choice == '3':
            query = input("Enter name or phone number to search: ")
            manager.search_contact(query)

        elif choice == '4':
            manager.view_contacts()
            index = int(input("Enter the contact number to update: ")) - 1
            save_name = input("Enter new name (leave blank to keep current): ")
            mobil_number = input("Enter new mobile number (leave blank to keep current): ")
            mail = input("Enter new email (leave blank to keep current): ")
            address = input("Enter new address (leave blank to keep current): ")
            manager.update_contact(index, save_name or None, mobile_number or None, mail or None, address or None)
            print("Contact updated successfully...")

        elif choice == '5':
            manager.view_contacts()
            index = int(input("Enter the contact number to delete: ")) - 1
            manager.delete_contact(index)
            print("Contact deleted successfully....")

            break

        else:
            print("Invalid choice... Please try again!!!")

if __name__ == "__main__":
    main()
